#!/bin/bash

ROOTDIR="/srv/vmcore/kvm.d"

VM=$1
shift
VERB=$1
shift

DEFAULTCONF="$ROOTDIR/default"
VMCONF="$ROOTDIR/$VM"

function help {
	echo ""
	echo "Usage: $(basename "$0") <VM> <VERB> [ARGS...]"
	echo ""
	echo "           VM     Name of virtual machine"
	echo ""
	echo "           VERB   One of (status|start|stop|backup|prebackup|postbackup)"
	echo ""
}

function prebackup {
	if [ -x "$VMCONF.prebackup" ]; then
		. "$VMCONF.prebackup"
	fi
}

function postbackup {
	if [ -x "$VMCONF.postbackup" ]; then
		. "$VMCONF.postbackup"
	fi
}

function backup {
	if [ -x "$VMCONF.backup" ]; then
		. "$VMCONF.backup"
	fi
}

if [ -z "$VM" -o -z "$VERB" -o "$VM" == "-h" -o "$VERB" == "-h" ]; then
	help
	exit 1
fi

if [ -z "$VM" -o ! -f "$VMCONF" ]; then
	echo "VM config missing or no VM argument was provided"
	exit 1
fi

eval $(crudini --get --format=sh "$DEFAULTCONF" '')
eval $(crudini --get --format=sh "$VMCONF" '')

echo "VM: $name"

case $VERB in
	prebackup)
		# can be used to prepare a VM for backup when the backup is coordinated via an external system
		prebackup
		;;
	postbackup)
		# can be used to unprepare a VM for backup when the backup is coordinated via an external system
		postbackup
		;;
	backup)
		prebackup
		backup
		postbackup
		;;
	*)
		systemctl $VERB vmcore-kvm@$VM.service $*
		;;
esac
