#!/bin/bash

ROOTDIR="/srv/vmcore/kvm.d"

VERB=$1
shift
VM=$1
shift

DEFAULTCONF="$ROOTDIR/default"
VMCONF="$ROOTDIR/$VM"

export monitor backupimage

function help {
	echo ""
	echo "Usage: $(basename "$0") <VERB> <VM> [ARGS...]"
	echo ""
	echo "           VERB   One of:"
	echo "                    help, list, status, start, stop, enable, disable,"
	echo "                    backup, prebackup, postbackup, screendump"
	echo ""
	echo "           VM     Name of virtual machine"
	echo ""
}

function readvm {
	if [ -z "$VM" -o ! -f "$VMCONF" ]; then
		echo "VM config missing or no VM argument was provided"
		exit 1
	fi
	eval $(crudini --get --format=sh "$DEFAULTCONF" '')
	eval $(crudini --get --format=sh "$VMCONF" '')
	echo "VM: $name"
}

function bashcomplete {
	echo BASHCOMPLETE
}

function verbs {
	echo help
	echo list
	echo status
	echo start
	echo stop
	echo enable
	echo disable
	echo backup
	echo prebackup
	echo postbackup
	echo screendump
}

function list {
	while read VMFILE; do
		basename "${VMFILE}"
	done < <(grep -El "^name=" /srv/vmcore/kvm.d/* | sort)
}

function prebackup {
	if [ -x "$VMCONF.prebackup" ]; then
		"$VMCONF.prebackup"
	fi
}

function postbackup {
	if [ -x "$VMCONF.postbackup" ]; then
		"$VMCONF.postbackup"
	fi
}

function backup {
	/srv/vmcore/bin/backup "$VM"
}

function screendump {
	TEMPFILE="/tmp/screendump.$$.ppm"
	touch "$TEMPFILE"
	nc -q 5 127.0.0.1 $monitor < <(echo screendump "$TEMPFILE") >/dev/null
	if [ -f "$TEMPFILE" ]; then
		convert "$TEMPFILE" "$1"
		rm -f "$TEMPFILE"
	fi
}

if [ -z "$VERB" -o "$VERB" == "-h" -o "$VM" == "-h" ]; then
	VERB=help
fi

case $VERB in
	bashcomplete)
		bashcomplete
		exit
		;;
	verbs)
		verbs
		exit
		;;
	help)
		help
		exit 1
		;;
	list)
		list
		exit
		;;
	prebackup)
		# can be used to prepare a VM for backup when the backup is coordinated via an external system
		readvm
		prebackup
		;;
	postbackup)
		# can be used to unprepare a VM for backup when the backup is coordinated via an external system
		readvm
		postbackup
		;;
	backup)
		readvm
		prebackup
		backup
		postbackup
		;;
	screendump)
		readvm
		screendump "$(readlink -f "$1")"
		;;
	*)
		readvm
		systemctl $VERB vmcore-kvm@$VM.service $*
		;;
esac
